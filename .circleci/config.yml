version: 2
jobs:
  build:
    docker:
      - image: circleci/elixir:1.11.4
        environment:
          MIX_ENV: test
    working_directory: ~/app
    steps:
      - checkout

      - run: mix local.hex --force
      - run: mix local.rebar --force

      - restore_cache:
          keys:
            - v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
            - v1-mix-cache-{{ .Branch }}
            - v1-mix-cache
      - restore_cache:
          keys:
            - v1-build-cache-{{ .Branch }}
            - v1-build-cache
      - run: mix do deps.get, compile
      - save_cache:
          key: v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths: "deps"
      - save_cache:
          key: v1-mix-cache-{{ .Branch }}
          paths: "deps"
      - save_cache:
          key: v1-mix-cache
          paths: "deps"
      - save_cache:
          key: v1-build-cache-{{ .Branch }}
          paths: "_build"
      - save_cache:
          key: v1-build-cache
          paths: "_build"

  lint:
    docker:
      - image: circleci/elixir:1.11.4
        environment:
          MIX_ENV: test
    working_directory: ~/app
    steps:
      - checkout
      - run: mix credo

  test:
    docker:
      - image: circleci/elixir:1.11.4
        environment:
          MIX_ENV: test
      - image: circleci/postgres:13.1
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: pluto_test
          POSTGRES_PASSWORD: postgres
    working_directory: ~/app
    steps:
      - checkout
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: mix test

workflows:
  version: 2
  backend:
    jobs:
      - build
      - lint:
          requires:
            - build
      - test:
          requires:
            - build

  # frontend:
  #   docker:
  #     - image: circleci/node:14.16.1

  #   working_directory: ~/app
  #   build_dir: frontend
  #   steps:
  #     - checkout

  #     - restore_cache:
  #         name: Restore Yarn Package Cache
  #         keys:
  #           - yarn-packages-{{ checksum "yarn.lock" }}
  #     - run:
  #         name: Install Dependencies
  #         command: yarn install --immutable
  #     - save_cache:
  #         name: Save Yarn Package Cache
  #         key: yarn-packages-{{ checksum "yarn.lock" }}
  #         paths:
  #           - .yarn/cache
  #           - .yarn/unplugged

  #     - run: yarn lint
