"Represents a schema"
schema {
  query: RootQueryType
}

type PageInfo {
  "When paginating backwards, are there more items?"
  hasPreviousPage: Boolean!

  "When paginating forwards, are there more items?"
  hasNextPage: Boolean!

  "When paginating backwards, the cursor to continue."
  startCursor: String

  "When paginating forwards, the cursor to continue."
  endCursor: String
}

type PostEdge {
  node: Post
  cursor: String
}

type PostConnection {
  pageInfo: PageInfo!
  edges: [PostEdge]
}

interface Node {
  "The ID of the object."
  id: ID!
}

type Post implements Node {
  "The ID of an object"
  id: ID!

  content: String!

  insertedAt: NaiveDateTime!
}

type RootQueryType {
  listPosts(after: String, first: Int, before: String, last: Int): PostConnection
  node(
    "The ID of an object."
    id: ID!
  ): Node
  isHealthy: Boolean!
}

"""
The `Naive DateTime` scalar type represents a naive date and time without
timezone. The DateTime appears in a JSON response as an ISO8601 formatted
string.
"""
scalar NaiveDateTime
